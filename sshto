#!/bin/bash

#Add your commands to this list
cmdlist=(
	#Command#  #Description#
	"ls  -la"  "List Files."
	"free -m"  "Show free ram."
	"df  -ih"  "Show free inodes."
	"df   -h"  "Show free disk space."
	"top -n1"  "Show summary system information."
	""         ""
    "copy"     "Copy selected file or dir."
	"sshkey"   "Add my ssh key to this server."
	"alias"    "Add my usefull aliases to this server."
)

#==================================================================================================
function bye { clear; ls --color=auto; exit 0; }; trap bye INT

# If connecting first time send 'yes' on ssh's request.
# Expect must be installed on server. Options:
#   $1 - ssh address with parameters(if needed)
#
# Usage example:
#   ssh_yes "-p22 user@localhost"

function ssh_yes () {
expect << EOF
spawn ssh $1
expect {
    "(yes/no)?" {
        send "yes\n"
        expect {
            "assword:" { exit }
            "$ "       { send "exit\n" }
        }
    }
    "assword:" { exit }
    "$ "       { send "exit\n" }
}
exit
EOF
}

function first_dialog { # Select host

	target=$(dialog --output-fd 1 \
					--extra-button --extra-label "RUN COMMAND" \
					--ok-label "CONNECT" --cancel-label "EXIT" \
					--menu "Select host to connect to:" 0 0 0 "${list[@]}")

	case $target:$? in

		 *:0) clear; ssh $target;;
		 *:3) second_dialog;;
		"":*) bye;;

	esac
}

function second_dialog { # Select command

	command=$(dialog --output-fd 1 --ok-label "RUN" --cancel-label "BACK" --aspect 100 --colors \
					 --menu "Select command to run on host \"\Z4$target\Z0\":" 0 0 0 "${cmdlist[@]}")

	case $command in

		"sshkey") clear; ssh_yes $target; ssh-copy-id $target; second_dialog;;
		"alias" ) clear; scp ~/.bash_aliases $target:~ ; second_dialog;;
        "copy"  ) file_copy; second_dialog;;
		""      ) first_dialog;;
		*       ) clear; ssh -t $target $command; sleep 3; second_dialog;;

	esac
}

function file_copy { # Copy selected file to server

    filename=$(dialog --output-fd 1 --aspect 100 --colors --fselect ./ 10 80)
    scp -r $filename $target:~
}

#==================================================================================================
#Create hosts list. Get hosts and descriptions from ~/.ssh/config.
IFSOLD=$IFS; IFS=$'\n'; for host in $(grep "Host " ~/.ssh/config | sed '/\*/d; s/Host //g;'); do

    name="${host// #*/}" # Get HostName
    desc="${host//*#/}"  # Get Description

    case $name in

        '#DUMMY') desc="${host%\#*}"; desc="${desc##*\#}"
                  name="{ $desc }"; line=$[ (40-${#name})/2 ]
                  name=$(printf %.s- $(seq $line); printf "$name"; printf %.s- $(seq $line))
                  [[ ${#name} -lt 40 ]] && name=-$name; desc=$(printf %.s- $(seq 20));;

    esac

    list+=( "$name" "$desc" )   #Add HostName and Description to the list

done; IFS=$IFSOLD

#GO)
first_dialog

exit 0
